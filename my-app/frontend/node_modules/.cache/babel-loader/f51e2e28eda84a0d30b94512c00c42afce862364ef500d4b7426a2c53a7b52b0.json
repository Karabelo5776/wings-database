{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karabelo\\\\Videos\\\\MOTHOBI REACT DATABASE (5)\\\\MOTHOBI REACT DATABASE\\\\my-app\\\\frontend\\\\src\\\\components\\\\ProductBarChart.js\";\n// src/components/ProductBarChart.js\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ProductBarChart = ({\n  products\n}) => {\n  const colors = ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)']; // Three colors\n  const borderColors = ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)']; // Matching border colors\n\n  const data = {\n    labels: products.map(product => product.name),\n    // Product names\n    datasets: [{\n      label: 'Product Quantity',\n      data: products.map(product => product.quantity),\n      // Corresponding quantities\n      backgroundColor: products.map((_, index) => colors[index % 3]),\n      // Cycle through the colors\n      borderColor: products.map((_, index) => borderColors[index % 3]),\n      // Cycle through the border colors\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n_c = ProductBarChart;\nexport default ProductBarChart;\nvar _c;\n$RefreshReg$(_c, \"ProductBarChart\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ProductBarChart","products","colors","borderColors","data","labels","map","product","name","datasets","label","quantity","backgroundColor","_","index","borderColor","borderWidth","options","scales","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Karabelo/Videos/MOTHOBI REACT DATABASE (5)/MOTHOBI REACT DATABASE/my-app/frontend/src/components/ProductBarChart.js"],"sourcesContent":["// src/components/ProductBarChart.js\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\n\r\n// Register the components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst ProductBarChart = ({ products }) => {\r\n    const colors = ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)']; // Three colors\r\n    const borderColors = ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)']; // Matching border colors\r\n\r\n    const data = {\r\n        labels: products.map(product => product.name), // Product names\r\n        datasets: [\r\n            {\r\n                label: 'Product Quantity',\r\n                data: products.map(product => product.quantity), // Corresponding quantities\r\n                backgroundColor: products.map((_, index) => colors[index % 3]), // Cycle through the colors\r\n                borderColor: products.map((_, index) => borderColors[index % 3]), // Cycle through the border colors\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n            },\r\n        },\r\n    };\r\n\r\n    return <Bar data={data} options={options} />;\r\n};\r\n\r\nexport default ProductBarChart;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACtC,MAAMC,MAAM,GAAG,CAAC,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,CAAC,CAAC,CAAC;EAClG,MAAMC,YAAY,GAAG,CAAC,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,CAAC,CAAC,CAAC;;EAElG,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAEJ,QAAQ,CAACK,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC;IAAE;IAC/CC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,kBAAkB;MACzBN,IAAI,EAAEH,QAAQ,CAACK,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACI,QAAQ,CAAC;MAAE;MACjDC,eAAe,EAAEX,QAAQ,CAACK,GAAG,CAAC,CAACO,CAAC,EAAEC,KAAK,KAAKZ,MAAM,CAACY,KAAK,GAAG,CAAC,CAAC,CAAC;MAAE;MAChEC,WAAW,EAAEd,QAAQ,CAACK,GAAG,CAAC,CAACO,CAAC,EAAEC,KAAK,KAAKX,YAAY,CAACW,KAAK,GAAG,CAAC,CAAC,CAAC;MAAE;MAClEE,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,WAAW,EAAE;MACjB;IACJ;EACJ,CAAC;EAED,oBAAOtB,OAAA,CAACV,GAAG;IAACgB,IAAI,EAAEA,IAAK;IAACa,OAAO,EAAEA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChD,CAAC;AAACC,EAAA,GA1BIzB,eAAe;AA4BrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}